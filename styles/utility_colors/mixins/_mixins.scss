// ? Breakpoints

@mixin breakpoint-up($size) {
  @media only screen and (min-width: #{$size - 1}) {
    @content;
  }
}

@mixin breakpoint-down($size) {
  @media only screen and (max-width: #{$size}) {
    @content;
  }
}

// Creates the base classes and breakpoint classes,
// Adds the screen size initials to the class to indicate the upwards size the class comes into affect
// the \ is used to allow the use of |, so the classes will actually be named 'md|mt--4'

// -|sm|md|lg|xl
// @include breakpoint-classes("class--name") { style: prop; }
@mixin breakpoint-classes($class) {
  .#{$class} {
    @content;
  }

  @each $initial, $screen-size in $screen-sizes {
    .#{$initial}\|#{$class} {
      @include breakpoint-up($screen-size) {
        @content;
      }
    }
  }
}

// TODO PSEUDO state classes e.g. hover
// TODO md|hover|class
// .hover\|transition--#{$key}:hover {
//   transition-property: $key;
// }




// ? List Classes

// -|sm|md|lg|xl
// @include list-simple-classes($list, "class", "style");
@mixin list-simple-classes($list, $class-prop, $style-prop) {
  @each $var in $list {
    @include breakpoint-classes("#{$class-prop}--#{$var}") {
      #{$style-prop}: $var
    }
  }
}

// -|sm|md|lg|xl
// @include list-prop-classes($list, "style");
@mixin list-prop-classes($list, $style-prop) {
  @each $var in $list {
    @include breakpoint-classes("#{$var}") {
      #{$style-prop}: $var
    }
  }
}


// ? Map Classes

// -|sm|md|lg|xl
// @include map-simple-classes($map, "class", "style");
@mixin map-simple-classes($map, $class-prop, $style-prop) {
  @each $key, $var in $map {
    @include breakpoint-classes("#{$class-prop}--#{$key}") {
      #{$style-prop}: $var
    }
  }
}


// @include map-prop-classes($map, "style");
@mixin map-prop-classes($list, $style-prop) {
  @each $key, $var in $list {
    @include breakpoint-classes("#{$key}") {
      #{$style-prop}: $var
    }
  }
}
